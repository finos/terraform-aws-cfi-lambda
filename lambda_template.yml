AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lambda and SQS Queue template'

###
### CloudFormation Interface Metadata
###

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Lambda Code Settings
      Parameters:
      - pLambdaZipBucket
      - pLambdaZipKey
      - pLoggingLevel
      - pKmsKeyArn
    - Label:
        default: SQS Dead Letter Queue Settings
      Parameters:
      - pQueueName
    ParameterLabels:
      pLambdaZipBucket:
        default: S3 Bucket
      pLambdaZipKey:
        default: S3 Key
      pLoggingLevel:
        default: Lambda Logging level
      pQueueName:
        default: SQS Queue Name
      pKmsKeyArn:
        default: KMS Key Arn
###
### Template input parameters
###

Parameters:
  pLambdaZipBucket:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9-\-_.]{3,63}
    Description: Name of the Security Control zip bucket
  pLambdaZipKey:
    Type: String
    AllowedPattern: ^.+\.zip$
    Description: The Security Control zip file key (e.g. functions/security-control.zip)
  pLoggingLevel:
    Type: String
    Default: ERROR
    Description: Sets the logging level of your security control's Lambda function.
    AllowedValues:
    - ERROR
    - WARNING
    - INFO
  pKmsKeyArn:
    Type: String
    Description: The KMS Key Arn to associate to the Lambda function
  pQueueName:
    Type: String
    Description: Name of the Dead Letter Queue to be created for retrying failed events

###
### Template Resources
###

Resources:
  # SQS Dead Letter Queue for retrying failed events
  rDeadLetterQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Sub ${pQueueName}-DeadLetterQueue
      Tags:
      - Key: Name
        Value: !Sub DeadLetterQueue-${AWS::StackName}

  # Security Control IAM Role
  rLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-LambdaRole'
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-LambdaPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudWatchLogsPermissions
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:${AWS::Partition}:logs:*:*:*'
              - Sid: SQSPermissions
                Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:SendMessage
                Resource: !GetAtt rDeadLetterQueue.Arn
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole

  # Security Control evaluation function
  rLambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn: rLambdaRole
    Properties:
      Code:
        S3Bucket: !Ref pLambdaZipBucket
        S3Key: !Ref pLambdaZipKey
      DeadLetterConfig:
        TargetArn: !GetAtt rDeadLetterQueue.Arn
      Environment:
        Variables:
          logging_level: !Ref 'pLoggingLevel'
      FunctionName: !Sub '${AWS::StackName}-LambdaFunction'
      Handler: index.lambda_handler
      KmsKeyArn: !Ref pKmsKeyArn
      Role: !GetAtt 'rLambdaRole.Arn'
      Runtime: python3.6
      Tags:
      - Key: Name
        Value: !Sub Lambda - ${AWS::StackName}
      Timeout: 15

  # Event Source to trigger evaluation
  rLambdaFunctionEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt rDeadLetterQueue.Arn
      FunctionName: !GetAtt rLambdaFunction.Arn

Outputs:
  oDeadLetterQueueURL:
    Description: URL of the dead letter queue
    Value: !Ref rDeadLetterQueue
  oDeadLetterQueueARN:
    Description: ARN of the dead letter queue
    Value: !GetAtt rDeadLetterQueue.Arn
  oLambdaFunction:
    Description: Name of the Lambda Function
    Value: !Ref rLambdaFunction
  oLambdaFunctionARN:
    Description: Lambda Function ARN
    Value: !GetAtt rLambdaFunction.Arn
